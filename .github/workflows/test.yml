# SPDX-FileCopyrightText: 2024 PNED G.I.E.
#
# SPDX-License-Identifier: Apache-2.0

name: Run Tests

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      # The CKAN version tag of the Solr and Postgres containers should match
      # the one of the container the tests run on.
      # You can switch this base image with a custom image tailored to your project
      image: ckan/ckan-dev:2.11-py3.10
      options: --user root
    services:
      solr:
        image: ckan/ckan-solr:2.11-solr9
      postgres:
        image: ckan/ckan-postgres-dev:2.11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:8

    env:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v5
      - name: REUSE Compliance Check
        uses: fsfe/reuse-action@v5
      - name: Install requirements (common)
        run: |
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
          pip install -e .
      - name: Setup CKAN extensions (harvest, scheming, dcat, dataset-series, fluent)
        run: |
          # Harvest v1.6.1 from GitHub
          git clone https://github.com/ckan/ckanext-harvest
          cd ckanext-harvest
          git checkout tags/v1.6.1
          pip install -e .
          pip install -r requirements.txt
          cd ..

          # Scheming release 3.1.0
          pip install -e 'git+https://github.com/ckan/ckanext-scheming.git@release-3.1.0#egg=ckanext-scheming[requirements]'

          # DCAT extension maintained for the GDI user portal
          pip install -e 'git+https://github.com/GenomicDataInfrastructure/gdi-userportal-ckanext-dcat.git@v2.3.3#egg=ckanext-dcat'
          if [ -f "${PIP_SRC}/ckanext-dcat/requirements.txt" ]; then
            pip install -r "${PIP_SRC}/ckanext-dcat/requirements.txt"
          fi

          # Dataset series extension
          pip install -e 'git+https://github.com/GenomicDataInfrastructure/gdi-userportal-ckanext-dataset-series.git@v1.0.0#egg=ckanext-dataset-series'
          if [ -f "${PIP_SRC}/ckanext-dataset-series/requirements.txt" ]; then
            pip install -r "${PIP_SRC}/ckanext-dataset-series/requirements.txt"
          fi

          # Fluent extension for multilingual support
          pip install -e 'git+https://github.com/ckan/ckanext-fluent.git#egg=ckanext-fluent'
          if [ -f "${PIP_SRC}/ckanext-fluent/requirements.txt" ]; then
            pip install -r "${PIP_SRC}/ckanext-fluent/requirements.txt"
          fi
      - name: Setup extension
        run: |
          sed -i -e 's/use = config:.*/use = config:\/srv\/app\/src\/ckan\/test-core.ini/' test.ini
          ckan -c test.ini db init
      - name: Run tests
        run: |
          pytest --ckan-ini=test.ini --cov=ckanext.gdi_userportal --disable-warnings ckanext/gdi_userportal
      - name: Generate coverage report
        run: |
          coverage xml -o coverage.xml
      - name: Install unzip
        run: apt-get update && apt-get install -y unzip
      - name: Sonar scan
        uses: SonarSource/sonarqube-scan-action@v6

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
